services:

  db-user:
    container_name: user-demo-db
    image: postgres
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - "5431:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - spring-cloud-network
    volumes:
      - ./user-service/src/main/resources/db:/docker-entrypoint-initdb.d

  db-company:
    container_name: company-demo-db
    image: postgres
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - spring-cloud-network
    volumes:
      - ./company-service/src/main/resources/db:/docker-entrypoint-initdb.d

  eureka-server:
    container_name: eureka-server
    image: openjdk:21-jdk-slim
    restart: unless-stopped
    ports:
      - "8761:8761"
    volumes:
      - ./eureka-server/target/eureka-server-0.0.1-SNAPSHOT.jar:/app.jar
    command: java -jar /app.jar
    networks:
      - spring-cloud-network
    depends_on:
      - db-user
      - db-company
    healthcheck:
        test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
        interval: 10s
        timeout: 5s
        retries: 10
        start_period: 30s

  config-server:
    container_name: config-server
    image: openjdk:21-jdk-slim
    restart: unless-stopped
    ports:
      - "8888:8888"
    volumes:
      - ./config-server/target/config-server-0.0.1-SNAPSHOT.jar:/app.jar
    command: java -jar /app.jar
    depends_on:
      - eureka-server
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - spring-cloud-network

  user-service:
    container_name: user-service
    image: openjdk:21-jdk-slim
    restart: unless-stopped
    ports:
      - "39001:39001"
    volumes:
      - ./user-service/target/user-service-0.0.1-SNAPSHOT.jar:/app.jar
    command: java -jar /app.jar
    depends_on:
      - config-server
      - eureka-server
      - db-user
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_URI: http://config-server:8888
    networks:
      - spring-cloud-network

  company-service:
    container_name: company-service
    image: openjdk:21-jdk-slim
    restart: unless-stopped
    ports:
      - "39002:39002"
    volumes:
      - ./company-service/target/company-service-0.0.1-SNAPSHOT.jar:/app.jar
    command: java -jar /app.jar
    depends_on:
      - config-server
      - eureka-server
      - db-company
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_URI: http://config-server:8888
    networks:
      - spring-cloud-network

  api-gateway:
    container_name: api-gateway
    image: openjdk:21-jdk-slim
    restart: unless-stopped
    ports:
      - "8082:8082"
    volumes:
      - ./api-gateway/target/api-gateway-0.0.1-SNAPSHOT.jar:/app.jar
    command: java -jar /app.jar
    depends_on:
      - eureka-server
      - config-server
      - user-service
      - company-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_URI: http://config-server:8888
    networks:
      - spring-cloud-network

networks:
  spring-cloud-network:
    driver: bridge